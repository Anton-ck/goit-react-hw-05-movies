{"version":3,"file":"static/js/415.004335fb.chunk.js","mappings":"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","sources":["API/API.jsx","components/MoviesSearch/MovieSearch.styled.js","components/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '292fb79ad255ff04db0087dc349cbd4a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const trendingMovies = await axios\n    .get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    .catch(error => {\n      return new Error(error);\n    });\n  return trendingMovies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movieDetails = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n\n  return movieDetails;\n};\n\nexport const getMoviesCast = async movieId => {\n  const movieCast = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n  \n  return movieCast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const movieReviews = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n\n  return movieReviews;\n};\n\nexport const getMovies = async query => {\n  const movies = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`\n  );\n\n  return movies;\n};","import styled from '@emotion/styled';\n\nexport const SearchFormStyled = styled.form`\n  margin: 0 auto;\n\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  width: 100px;\n  height: 48px;\n  border-radius: 10px;\n  opacity: 0.6;\n  border: none;\n  font-size: 18px;\n  font-weight: 700;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n margin-right: 25px;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n\n    font-size: 24px;\n  }\n`;\n","import React from 'react';\nimport {\n  SearchFormStyled,\n  SearchFormButton,\n  SearchFormInput,\n} from './MovieSearch.styled';\n\nconst SearchForm = ({ handleSubmit, handleInputSubmit, query }) => {\n  return (\n    <SearchFormStyled onSubmit={handleSubmit}>\n\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleInputSubmit}\n        value={query}\n      />\n      <SearchFormButton type=\"submit\">Search</SearchFormButton>\n    </SearchFormStyled>\n  );\n};\n\nexport default SearchForm;\n","import { getMovies } from 'API/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport SearchForm from 'components/MoviesSearch/MoviesSearch';\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [Error, setError] = useState(null);\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') ?? '';\n  const [movieQuery, setMovieQuery] = useState(query);\n\n  const location = useLocation();\n  console.log(location);\n  console.log(query);\n\n  const handleChange = e => {\n    if (e.target.value !== '') {\n      return setSearchParams({ query: e.target.value });\n    }\n    setSearchParams({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Please, input your query', {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n    }\n\n    setMovieQuery(query);\n  };\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n    const movieSearch = async () => {\n      try {\n        setIsLoading(true);\n\n        const getMovie = await getMovies(movieQuery);\n        setMovie(getMovie.data);\n\n        if (getMovie.data.results.length === 0) {\n          toast.error('Your query do not found', {\n            position: 'top-right',\n            autoClose: 1000,\n            theme: 'dark',\n          });\n        }\n      } catch (error) {\n        setError(error);\n        console.log(error.response.data.status_message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieSearch();\n  }, [movieQuery]);\n\n  const { results } = movie;\n  return (\n    <>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        handleInputSubmit={handleChange}\n        query={query}\n      />\n      {Error ? (\n        <div> {Error.response.data.status_message}</div>\n      ) : isLoading ? (\n        <Loader></Loader>\n      ) : (\n        <ul\n          style={{\n            margin: '0 auto',\n            display: 'flex',\n            flexDirection: 'column',\n                gap: '10px',\n            alignItems: 'center',\n          }}\n        >\n          {results &&\n            results.map(result => (\n              <li key={result.id}>\n                <Link to={`${result.id}`} state={{ from: location }}>\n                  {result.title || result.name}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","catch","error","Error","trendingMovies","getMovieDetails","movieId","movieDetails","getMoviesCast","movieCast","getMoviesReviews","movieReviews","getMovies","query","movies","SearchFormStyled","styled","SearchFormButton","SearchFormInput","handleSubmit","handleInputSubmit","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","value","useState","isLoading","setIsLoading","setError","movie","setMovie","useSearchParams","searchParams","setSearchParams","get","movieQuery","setMovieQuery","location","useLocation","console","log","useEffect","movieSearch","getMovie","data","results","length","toast","position","autoClose","theme","response","status_message","e","preventDefault","trim","target","Loader","style","margin","display","flexDirection","gap","alignItems","map","result","to","id","state","from","title","name"],"sourceRoot":""}