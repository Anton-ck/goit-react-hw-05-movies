{"version":3,"file":"static/js/375.713427d3.chunk.js","mappings":"mTAEMA,EAAM,mCACNC,EAAW,+BAEJC,EAAiB,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UACnBF,EADmB,qCACkBD,IAC5CI,OAAM,SAAAC,GACL,OAAO,IAAIC,MAAMD,EAClB,IAL4B,cACzBE,EADyB,yBAMxBA,GANwB,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACJQ,EADI,oBACeT,IAFb,cACvBU,EADuB,yBAKtBA,GALsB,2CAAH,sDAQfC,EAAa,mCAAG,WAAMF,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACIQ,EADJ,4BAC+BT,IAF5B,cACrBY,EADqB,yBAIpBA,GAJoB,2CAAH,sDAObC,EAAgB,mCAAG,WAAMJ,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACJQ,EADI,4BACuBT,IAFpB,cACxBc,EADwB,yBAKvBA,GALuB,2CAAH,sDAQhBC,EAAS,mCAAG,WAAMC,GAAN,uFACFb,EAAAA,EAAAA,IAAA,UAChBF,EADgB,+BACee,EADf,oBACgChB,IAF9B,cACjBiB,EADiB,yBAKhBA,GALgB,2CAAH,qD,4LClCTC,EAAsBC,EAAAA,EAAAA,IAAH,4DAKnBC,EAAqBD,EAAAA,EAAAA,IAAH,2FAMlBE,EAAaF,EAAAA,EAAAA,GAAH,oDAIVG,GAAeH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,6mB,SCiFzB,EAxFqB,WAAO,IAAD,IACzB,GAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOd,EAAP,KAAqBe,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOlB,EAAP,KAAcsB,EAAd,KACQnB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACFqB,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpDC,QAAQC,IAAIP,IAEZQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBZ,GAAa,GAFS,UAIKnB,EAAAA,EAAAA,IAAgBC,GAJrB,OAIhBC,EAJgB,OAKtBe,EAAgBf,EAAa8B,MAC7BJ,QAAQC,IAAI3B,EAAa8B,MANH,gDAQtBZ,EAAS,EAAD,IACRQ,QAAQC,IAAI,KAAMI,SAASD,KAAKE,gBATV,yBAWtBf,GAAa,GAXS,4EAAH,qDAcvBY,GACD,GAAE,CAAC9B,IAEJ,IAAQkC,EACNjC,EADMiC,YAAaC,EACnBlC,EADmBkC,MAAOC,EAC1BnC,EAD0BmC,KAAMC,EAChCpC,EADgCoC,aAAcC,EAC9CrC,EAD8CqC,OAAQC,EACtDtC,EADsDsC,SAGxD,OACE,8BACG1C,GACC,2BACGA,EAAMmC,SAASD,KAAKE,gBACrB,SAACpB,EAAD,CAAc2B,GAAIjB,EAAakB,QAA/B,SAAwC,cAExCxB,GACF,SAACyB,EAAA,EAAD,KAGA,4BACE,UAACjC,EAAD,YACE,SAACI,EAAD,CAAc2B,GAAIjB,EAAakB,QAA/B,SAAwC,YAExC,gBACEE,IACET,EACI,mCAAqCA,EACrC,sCAENU,IAAKT,KAEP,UAACxB,EAAD,YACE,+BAAKwB,QAAL,IAAKA,EAAAA,EAASC,KACd,yBAAG,gBACW,0BAAOC,QAErB,wBAAI,cACJ,uBAAIE,KACJ,wBAAI,aACJ,SAAC3B,EAAD,UACG0B,GACCA,EAAOO,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMV,MAAjBU,EAAMC,GAAnB,OAEpB,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,wBAMX,SAAC,EAAAQ,SAAD,WAEd,SAAC,KAAD,UAMX,C","sources":["API/API.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '292fb79ad255ff04db0087dc349cbd4a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const trendingMovies = await axios\n    .get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    .catch(error => {\n      return new Error(error);\n    });\n  return trendingMovies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movieDetails = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n\n  return movieDetails;\n};\n\nexport const getMoviesCast = async movieId => {\n  const movieCast = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n  \n  return movieCast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const movieReviews = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n\n  return movieReviews;\n};\n\nexport const getMovies = async query => {\n  const movies = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`\n  );\n\n  return movies;\n};","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieDetailsWrapper = styled.div`\ndisplay: flex;\nmargin-top: 100px;\n`\n\nexport const TextInfoAboutMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`\n\nexport const GenresList = styled.ul`\ndisplay: flex;\ngap: 20px;\n`\nexport const ButtonGoBack = styled(Link)`\n  position: absolute;\n  top: 100px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 10px 20px;\n  min-width: 100px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  color: #fff;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  border: 0;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background: #188ce8;\n  }\n`;","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovieDetails } from 'API/API';\nimport { Loader } from 'components/Loader/Loader';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  MovieDetailsWrapper,\n  TextInfoAboutMovie,\n  GenresList,\n  ButtonGoBack,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [Error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const previousPage = useRef(location.state?.from ?? '/');\n\n  console.log(location);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovieDetails(movieId);\n        setMovieDetails(movieDetails.data);\n        console.log(movieDetails.data);\n      } catch (error) {\n        setError(error);\n        console.log(error.response.data.status_message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const { poster_path, title, name, vote_average, genres, overview } =\n    movieDetails;\n\n  return (\n    <>\n      {Error ? (\n        <div>\n          {Error.response.data.status_message}\n          <ButtonGoBack to={previousPage.current}>GoBack</ButtonGoBack>\n        </div>\n      ) : isLoading ? (\n        <Loader></Loader>\n \n      ) : (\n        <div>\n          <MovieDetailsWrapper>\n            <ButtonGoBack to={previousPage.current}>GoBack</ButtonGoBack>\n\n            <img\n              src={\n                poster_path\n                  ? 'https://image.tmdb.org/t/p/w300/' + poster_path\n                  : 'https://via.placeholder.com/300x450'\n              }\n              alt={title}\n            />\n            <TextInfoAboutMovie>\n              <h1>{title ?? name}</h1>\n              <p>\n                User Score: <span>{vote_average}</span>\n              </p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres:</h2>\n              <GenresList>\n                {genres &&\n                  genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n              </GenresList>\n              <h3>Additional information</h3>\n              <ul>\n                <li>\n                  <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\">Reviews</Link>\n                </li>\n              </ul>\n            </TextInfoAboutMovie>\n          </MovieDetailsWrapper>\n\n                          <Suspense>\n\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","catch","error","Error","trendingMovies","getMovieDetails","movieId","movieDetails","getMoviesCast","movieCast","getMoviesReviews","movieReviews","getMovies","query","movies","MovieDetailsWrapper","styled","TextInfoAboutMovie","GenresList","ButtonGoBack","Link","useState","setMovieDetails","isLoading","setIsLoading","setError","useParams","location","useLocation","previousPage","useRef","state","from","console","log","useEffect","fetchMovieDetails","data","response","status_message","poster_path","title","name","vote_average","genres","overview","to","current","Loader","src","alt","map","genre","id","Suspense"],"sourceRoot":""}